(()=>{"use strict";(()=>{function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function e(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var n=function(){function n(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.field=document.querySelector(".field"),this.buttonPlay=document.querySelector(".play"),this.buttonSettings=document.querySelector(".settings-button"),this.counter=document.querySelector(".counter"),this.timer=document.querySelector(".timer"),this.endOfGame=document.querySelector(".end-of-game"),this.audio=new Audio("./assets/sounds/move.wav"),this.fieldSize=16,this.text="black",this.image="off",this.moveCounter=0,this.timerOff=!0}var r,i;return r=n,(i=[{key:"shuffleGameField",value:function(e){for(var n=function(e){return function(e){if(Array.isArray(e))return t(e)}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(Array(e).keys()).sort((function(){return Math.random()-.5})),r=Math.sqrt(e),i=[],o=0;o<n.length;o+=r)i.push(n.slice(o,r+o));i.map((function(t,e){return e%2?t.reverse():t}));for(var a=i.flat(),c=0,s=0;s<a.length-1;s+=1)if(0!==a[s])for(var l=s+1;l<a.length;l+=1)a[s]>a[l]&&0!==a[l]&&(c+=1);if(c%2==0)if(0!==n[0]&&0!==n[1]){var u=[n[1],n[0]];n[0]=u[0],n[1]=u[1]}else{var f=[n[n.length-2],n[n.length-1]];n[n.length-1]=f[0],n[n.length-2]=f[1]}return n}},{key:"createGameField",value:function(){var t=this;this.shuffleGameField(this.fieldSize).forEach((function(e,n){var r=n%Math.sqrt(t.fieldSize),i=(n-r)/Math.sqrt(t.fieldSize),o=400/Math.sqrt(t.fieldSize);if(0!==e){var a=document.createElement("div");a.classList.add("cell"),a.innerText=e,a.style.width="".concat(400/Math.sqrt(t.fieldSize),"px"),a.style.height="".concat(400/Math.sqrt(t.fieldSize),"px"),a.style.left="".concat(r*o,"px"),a.style.top="".concat(i*o,"px"),"disabled"===t.text?a.style.fontSize="0rem":(a.style.color="".concat(t.text),a.style.fontSize=""),t.field.append(a)}else t.left="".concat(r*o,"px"),t.top="".concat(i*o,"px")})),this.bindTriggers(),"on"===this.image&&this.setImage()}},{key:"clearField",value:function(){document.querySelectorAll(".cell").forEach((function(t){return t.remove()}))}},{key:"getImageUrl",value:function(){var t=Math.floor(149*Math.random()+1);this.field.setAttribute("data-url","url(assets/images/".concat(t,".jpg)"))}},{key:"setImage",value:function(){var t=this,e=document.querySelectorAll(".cell"),n=this.field.getAttribute("data-url");e.forEach((function(r,i){var o="".concat(n," ").concat((+e[i].innerText-1)%Math.sqrt(t.fieldSize)*(100/(Math.sqrt(t.fieldSize)-1)),"% ").concat(Math.trunc((+e[i].innerText-1)/Math.sqrt(t.fieldSize))*(100/(Math.sqrt(t.fieldSize)-1)),"%");"on"===t.field.getAttribute("data-image")?(e[i].style.background=o,e[i].style.backgroundSize="400px"):e[i].style.background=""}))}},{key:"bindTriggers",value:function(){var t=this,e=document.querySelectorAll(".cell");e.forEach((function(n,r){n.addEventListener("click",(function(){var i=Math.abs(t.top.slice(0,-2)-n.style.top.slice(0,-2)),o=Math.abs(t.left.slice(0,-2)-n.style.left.slice(0,-2)),a=400/Math.sqrt(t.fieldSize);if(Math.trunc(i)+Math.trunc(o)===Math.trunc(a)){"on"===t.field.getAttribute("data-sound")&&t.audio.play(),t.moveCounter+=1,t.counter.innerHTML="Moves: ".concat(t.moveCounter),t.timerOff&&(t.setTimer(),t.timerOff=!1);var c=[e[r].style.left,t.left];t.left=c[0],e[r].style.left=c[1];var s=[e[r].style.top,t.top];t.top=s[0],e[r].style.top=s[1],t.checkStatus()}}))}))}},{key:"checkStatus",value:function(){var t=this,e=document.querySelectorAll(".cell"),n=400/Math.sqrt(this.fieldSize),r=0;e.forEach((function(e){"".concat(Math.trunc(e.style.left.slice(0,-2)),"px")==="".concat((+e.innerText-1)%Math.sqrt(t.fieldSize)*Math.trunc(n),"px")&&"".concat(Math.trunc(e.style.top.slice(0,-2)),"px")==="".concat(Math.trunc((+e.innerText-1)/Math.sqrt(t.fieldSize))*Math.trunc(n),"px")&&(r+=1)})),r===e.length&&(this.endOfGame.style.display="flex",this.buttonSettings.setAttribute("disabled","disabled"),this.setRecord(this.moveCounter,this.timer.innerText.slice(6),this.fieldSize),clearInterval(this.timerId))}},{key:"setTimer",value:function(){var t=this,e=0;this.timerId=setInterval((function(){t.field.getAttribute("data-pause")||(e+=1,t.timer.innerHTML="Time: \n        ".concat(Math.trunc(e/60)<10?"0".concat(Math.trunc(e/60)):Math.trunc(e/60),":").concat(e%60<10?"0".concat(e%60):e%60))}),1e3)}},{key:"setRecord",value:function(t,e,n){var r;r=localStorage.getItem("records".concat(n))?JSON.parse(localStorage.getItem("records".concat(n))):[];var i=(new Date).toString(),o={moves:t,time:e,date:"".concat(i.slice(8,10)," ").concat(i.slice(4,7)," ").concat(i.slice(11,15))};r.push(o),r.sort((function(t,e){return t.moves>e.moves?1:-1})),r.length>10?localStorage.setItem("records".concat(n),JSON.stringify(r.slice(0,10))):localStorage.setItem("records".concat(n),JSON.stringify(r))}},{key:"setInitialState",value:function(){clearInterval(this.timerId),this.endOfGame.style.display="none",this.timer.innerText="Time: 00:00",this.counter.innerText="Moves: 0",this.moveCounter=0,this.timerOff=!0,this.fieldSize=+this.field.getAttribute("data-size"),this.text=this.field.getAttribute("data-text"),this.image=this.field.getAttribute("data-image"),this.buttonSettings.removeAttribute("disabled"),this.getImageUrl(),this.clearField()}},{key:"init",value:function(){var t=this;this.getImageUrl(),this.createGameField(),this.buttonPlay.addEventListener("click",(function(){t.setInitialState(),t.createGameField()}))}}])&&e(r.prototype,i),n}();function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function o(t,e){return(o=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function a(t,e){return!e||"object"!==r(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var s=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&o(t,e)}(u,t);var e,n,r,s,l=(r=u,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=c(r);if(s){var n=c(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return a(this,t)});function u(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(t=l.call(this)).settings=document.querySelector(".settings"),t.button=document.querySelector(".settings-button"),t.field=document.querySelector(".field"),t.text=document.getElementById("text"),t.sound=document.getElementById("sound"),t.image=document.getElementById("image"),t.size=document.getElementById("field-size"),t}return e=u,(n=[{key:"changeText",value:function(){var t=this,e=document.querySelectorAll(".cell");e.forEach((function(n,r){"disabled"===t.text.value?e[r].style.fontSize="0rem":(e[r].style.color="".concat(t.text.value),e[r].style.fontSize="")}))}},{key:"init",value:function(){var t=this;this.button.addEventListener("click",(function(e){"Settings"===e.target.innerHTML?(t.field.setAttribute("data-pause",!0),t.button.innerHTML="Resume game",t.settings.style.display="flex"):(t.field.removeAttribute("data-pause"),t.button.innerHTML="Settings",t.settings.style.display="none")})),this.text.addEventListener("change",(function(){t.field.setAttribute("data-text","".concat(t.text.value)),t.changeText()})),this.sound.addEventListener("change",(function(){t.field.setAttribute("data-sound","".concat(t.sound.value))})),this.image.addEventListener("change",(function(){t.field.setAttribute("data-image","".concat(t.image.value)),t.setImage()})),this.size.addEventListener("change",(function(){t.field.setAttribute("data-size","".concat(t.size.value))}))}}])&&i(e.prototype,n),u}(n);function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var u=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.button=document.querySelector(".popup-records__open"),this.container=document.querySelector(".popup-records"),this.settings=document.querySelector(".settings"),this.buttonSettings=document.querySelector(".settings-button"),this.fieldSize=document.getElementById("field-size")}var e,n;return e=t,(n=[{key:"buildTable",value:function(){var t=this;this.container.innerHTML="";var e=JSON.parse(localStorage.getItem("records".concat(this.fieldSize.value)));if(e){var n="";e.forEach((function(t){n+='\n        <tbody class="records__tbody">\n          <tr class="records__row">\n            <th class="records__cell">'.concat(t.moves,'</th>\n            <th class="records__cell">').concat(t.time,'</th>\n            <th class="records__cell">').concat(t.date,"</th>\n          </tr>\n        </tbody>")}));var r='\n        <table class="records">\n        <caption class="records__caption">Best scores '.concat("9"===this.fieldSize.value?"3x3":"4x4",'</caption>\n        <thead class="records__thead">\n          <tr class="records__row">\n            <th class="records__cell">Moves</th>\n            <th class="records__cell">Time</th>\n            <th class="records__cell">Date</th>\n          </tr>\n        </thead>\n        ').concat(n,"\n      </table>");this.container.innerHTML+=r}else this.container.innerHTML+='<div class="records__notice">No data yet (:</div>';this.container.innerHTML+='<a href="#" class="popup-records__close">Back</a>',this.container.style.display="flex",document.querySelector(".popup-records__close").addEventListener("click",(function(e){e.preventDefault(),t.container.style.display="none",t.settings.style.display="flex",t.buttonSettings.removeAttribute("disabled")}))}},{key:"init",value:function(){var t=this;this.button.addEventListener("click",(function(){t.buildTable(),t.settings.style.display="none",t.buttonSettings.setAttribute("disabled","disabled")}))}}])&&l(e.prototype,n),t}();document.addEventListener("DOMContentLoaded",(function(){(new n).init(),(new s).init(),(new u).init()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,